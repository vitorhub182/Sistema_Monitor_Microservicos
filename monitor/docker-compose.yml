version: "3.5"

services:
  postgres-monitor:
    container_name: postgres-monitor
    image: postgres:15.0
    networks:
     network_micro:
      ipv4_address: 192.168.2.101
    environment:
      POSTGRES_PASSWORD: cefetmg
      POSTGRES_USER: root
      POSTGRES_DB: monitor_rastros
      PGDATA: /data/postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: pg_isready -U root -d monitor_rastros
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres:/data/postgres
    restart: unless-stopped

  backend-monitor:
   container_name: backend-monitor
   environment:
    DB_HOST: postgres-monitor
    DB_PORT: 5432
    DB_USERNAME: root
    DB_PASSWORD: cefetmg
    DB_NAME: monitor_rastros
    DB_ADMIN_EMAIL: admin@root.com
    SECRET: secretcefetmg
    EXPIRESIN: 5000s
    ENCRIPT: encryptcefetmg
    INDEX_TRACES_ELASTICSEARCH: traces-generic-default
    INDEX_LOGS_ELASTICSEARCH: .ds-logs-generic-default-*
    INDEX_METRICS_ELASTICSEARCH: .ds-metrics-generic-default-*
    ES_LOCAL_VERSION: 8.17.0
    ES_LOCAL_CONTAINER_NAME: es-local-dev
    ES_LOCAL_PASSWORD: 31ESN3RZ
    ES_LOCAL_USERNAME: elastic
    ES_LOCAL_URL: http://es-local-dev:9200
    ES_LOCAL_PORT: 9200
    ES_LOCAL_HEAP_INIT: 128m
    ES_LOCAL_HEAP_MAX: 2g
    ES_LOCAL_DISK_SPACE_REQUIRED: 1gb
    KIBANA_LOCAL_CONTAINER_NAME: kibana-local-dev
    KIBANA_LOCAL_PORT: 5601
    KIBANA_LOCAL_PASSWORD: K7Uj7rXh
    KIBANA_ENCRYPTION_KEY: bB0XCsuLs0cKw9tYxEglOPyBDhLKqWdx
    ES_LOCAL_API_KEY: S0xmOGhwUUIzVDNWeG1BVjY1RUM6al9zaERlLUNTZ2E1dVhEaEdFUmFqZw==
   build:
    context: ./backend
    dockerfile: Dockerfile
   stdin_open: true 
   tty: true
   ports:
    - "3002:3000"
   networks:
    network_micro:
     ipv4_address: 192.168.2.102
   depends_on:
     postgres-monitor:
       condition: service_healthy
 
  frontend-monitor:
   container_name: frontend-monitor
   environment:
    NEXT_PUBLIC_BACKEND_HOST: http://localhost
    NEXT_PUBLIC_BACKEND_PORT: 3002
   build:
    context: ./frontend
    dockerfile: Dockerfile
   stdin_open: true
   tty: true
   ports:
    - "3001:3000"
   networks:
    network_micro:
     ipv4_address: 192.168.2.103

networks:
 network_micro:
  external: true
  name: network_micro
  driver: bridge
  ipam:
   driver: default
   config:
    - subnet: 192.168.2.0/24

volumes:
  postgres:
